import platform

env = Environment(PIC = '24FJ128GB206', 
                  CC = 'xc16-gcc', 
                  PROGSUFFIX = '.cof', 
                  CFLAGS = '-g -omf=coff -x c -mcpu=$PIC', 
                  LINKFLAGS = '-omf=coff -mcpu=$PIC -Wl,--script="app_p24FJ128GB206.gld"', 
                  CPPPATH = '../lib')

if platform.system() == 'Linux':
    env.PrependENVPath('PATH', '/opt/microchip/xc16/v1.24/bin')
elif platform.system() == 'Darwin':
    env.PrependENVPath('PATH', '/Applications/microchip/xc16/v1.24/bin')

bin2hex = Builder(action = 'xc16-bin2hex $SOURCE -omf=coff',
                  suffix = 'hex', 
                  src_suffix = 'cof')
env.Append(BUILDERS = {'Hex' : bin2hex})
list = Builder(action = 'xc16-objdump -S -D -omf=coff $SOURCE > $TARGET', 
               suffix = 'lst', 
               src_suffix = 'cof')
env.Append(BUILDERS = {'List' : list})

baseDependencies = ['../lib/timer.c',
                '../lib/ui.c',
                '../lib/pin.c',
                '../lib/uart.c',
                '../lib/oc.c',
                '../lib/motor.c',
                '../lib/analogRead.c',
                ]

functions = {
                'joystick' : baseDependencies + ['usb.c'] + ['descriptors.c'],
                'hello'    : baseDependencies
            }

for function, dependencies in functions.items():
    env.Program(function, [function + '.c'] + dependencies)
    env.Hex(function)
    env.List(function)
